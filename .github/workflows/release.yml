name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Run tests
        run: cargo test --verbose

  build:
    name: Build and Release
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary-suffix: ''
          - os: macos-latest
            target: x86_64-apple-darwin
            binary-suffix: ''

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Get tag name
        id: tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Extract changelog
        id: changelog
        run: |
          RELEASE_NOTES=$(.github/scripts/extract-changelog.sh "${{ steps.tag.outputs.TAG_NAME }}")
          {
            echo 'RELEASE_NOTES<<EOF'
            echo "$RELEASE_NOTES"
            echo EOF
          } >> $GITHUB_OUTPUT
        shell: bash

      - name: Prepare binary
        run: |
          cp target/${{ matrix.target }}/release/foundry foundry-${{ steps.tag.outputs.TAG_NAME }}-${{ matrix.target }}
        shell: bash

      - name: Create Release
        if: matrix.os == 'ubuntu-latest'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.TAG_NAME }}
          name: Release ${{ steps.tag.outputs.TAG_NAME }}
          body: ${{ steps.changelog.outputs.RELEASE_NOTES }}
          draft: false
          prerelease: ${{ contains(steps.tag.outputs.TAG_NAME, 'alpha') || contains(steps.tag.outputs.TAG_NAME, 'beta') || contains(steps.tag.outputs.TAG_NAME, 'rc') }}
          files: |
            foundry-${{ steps.tag.outputs.TAG_NAME }}-${{ matrix.target }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        if: matrix.os != 'ubuntu-latest'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.TAG_NAME }}
          files: |
            foundry-${{ steps.tag.outputs.TAG_NAME }}-${{ matrix.target }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}